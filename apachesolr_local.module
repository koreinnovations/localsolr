<?php

function apachesolr_local_menu() {
  $items = array();
  
  return $items;
}
/**
 * Implementation of hook_search
 */
function apachesolr_local_search($op = 'search', $keys = null) {
  switch ($op) {
    case 'name':
      return t('Local Search');
    break;
    case 'reset':
      apachesolr_clear_last_index('apachesolr_search');
    break;
    case 'search':
      if ($near = search_query_extract($keys, 'near')){
        $search_keys = str_replace('near:'.$near, '', $keys);
        $near = str_replace('::', ' ', $near);

	//Lets show all results if no key set but we have a location
	if(!$search_keys && $near) {
		$search_keys = '*:*';
	}
	
	//TODO Need to handle no valid location found. It'd be nice if we could link this
	//into the Location's module geocaching
        $gps = apachesolr_local_gps_lookup($near);
      }
      return apachesolr_search_search('search' ,$search_keys);
    break;
    case 'status':
      return apachesolr_index_status('apachesolr_search');
    break;
  }
}



/**
 * function apachesolr_local_gps_lookup() performs the geoencoding lookup based
 * on the google maps api.
 * TODO: Add setings for user key, make this extendable to other geoencoding services
 *
 * We set $gps as static so the value is available throught the request once set...
 * this is mainly so we can get to it and adjust the solr params in
 * hook_apachesolr_modify_query(&$query, &$params, $caller); 
 */
function apachesolr_local_gps_lookup($location=NULL) {
  static $gps = NULL;
  if($location){
      $url = 'http://maps.google.com/maps/geo?output=xml&oe=utf8&sensor=false&key='.gmap_get_key().'&q=';
      $location = urlencode($location);
      $string = file_get_contents($url . $location);
      $results = simplexml_load_string($string);
      if ((string)$results->Response->Status->code == '200') {
        list($lng, $lat) = explode(',', (string) $results->Response->Placemark->Point->coordinates);
      }

      $gps = array('lat' => $lat, 'lng' => $lng, 'data' => $results->Response);
  }
 
 
  return $gps;
}

/**
 * Implementation of hook_form_alter()
 */
function apachesolr_local_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'search_form' && $form['module']['#value'] == 'apachesolr_local') {
    // Remove the ugly near: from the search box
    $keys = $form['basic']['inline']['keys']['#default_value'];
    $near = search_query_extract($keys, 'near');
    $keys = str_replace('near:'.$near, '', $keys);
    $keys = $form['basic']['inline']['keys']['#default_value'] = $keys;
    //Perform some basic styling
    $form['basic']['#title'] = '';
    $form['basic']['inline']['keys']['#title'] = t("Keywords");
    $form['basic']['inline']['keys']['#weight'] = -5;
    $form['basic']['inline']['processed_keys']['#weight'] = -4;
    $form['basic']['inline']['submit']['#weight'] = -2;
    //Add a "near" search field
    $form['basic']['inline']['near'] = array(
      '#type' => 'textfield',
      '#title' => t('Near'),
      '#weight' => -3,
      '#size' => 20,
      '#default_value' => str_replace('::', ' ', $near),
    );
    $form['#validate'][] = 'apachesolr_local_search_validate';
  }
}

function apachesolr_local_search_validate($form, &$form_state) {
// Initialise using any existing basic search keywords.
  $keys = $form_state['values']['processed_keys'];

  // Insert the near query into the key, replacing spaces with a :: delimiter
  // because locations almost always have spaces.  TODO: find a better way to do this
  if (isset($form_state['values']['near'])) {
    $keys = search_query_insert($keys, 'near', str_replace(' ', '::', $form_state['values']['near']));
  }
  if (!empty($keys)) {
    form_set_value($form['basic']['inline']['processed_keys'], trim($keys), $form_state);
  }
}


/**
 * Implementatin of hook_apachesolr_modify_query(&$query, &$params, $caller);
 *
 * TODO, make radius user selectable from a select box
 */
function apachesolr_local_apachesolr_modify_query(&$query, &$params, $caller) {
            if($gps = apachesolr_local_gps_lookup()){                
                $params['qt'] = 'geo';
                $params['lat'] = $gps['lat'];
                $params['long'] = $gps['lng'];
                $params['radius'] = 40;
                $params['sort'] = 'geo_distance asc';
		$params['fl'] = $params['fl'] .',body';
            }
}




